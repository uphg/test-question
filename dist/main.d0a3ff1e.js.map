{"version":3,"sources":["test.js","main.js"],"names":["title","text","random","unfilteredData","testData","reset","get_el","app","pdf","localKey","addChapter","data","isData","type","Array","from","console","error","problemList","getQuestionList","forEach","item","index","number","parseInt","randomArray","result","initElement","element","local","asserLocal","key","getLocal","setLocal","value","loadTemplate","parent","template","ulContent","innerHTML","document","querySelector","array","isArray","i","single","Math","floor","length","push","splice","after","name","localStorage","hasOwnProperty","JSON","parse","getItem","setItem","stringify","o","s","Object","prototype","toString","call","match","toLowerCase","onclick","QuestionList","window","print"],"mappings":"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","file":"main.d0a3ff1e.js","sourceRoot":"..\\src","sourcesContent":["export default [\r\n    {\r\n        title: '前置问题',\r\n        text: [\r\n            '简单的做个自我介绍',\r\n            '简单的介绍一下你的项目',\r\n            '之前的工作主要做一些什么',\r\n        ]\r\n    },\r\n    {\r\n        title: 'HTML押题',\r\n        random: 2,\r\n        text: [\r\n            '你是如何理解HTML语义化的？（举例）',\r\n            'meta viewport 是做什么的，怎么写？（举例）',\r\n            '你用过哪些HTML5标签（举例）',\r\n            'H5是什么（概念）'\r\n        ]\r\n    },\r\n    {\r\n        title: 'CSS押题',\r\n        random: 2,\r\n        text: [\r\n            '两种盒模型分别说一下。',\r\n            '如何垂直居中？',\r\n            'flex 怎么用，常用属性有哪些？',\r\n            'BFC 是什么？',\r\n            'CSS 选择器优先级？',\r\n            '如何清除浮动？'\r\n        ]\r\n    },\r\n    {\r\n        title: 'JS押题',\r\n        random: 5,\r\n        text: [\r\n            'ES 6 语法知道哪些，分别怎么用？',\r\n            'Promise、Promise.all、Promise.race 分别怎么用？',\r\n            '手写函数防抖和函数节流',\r\n            '手写AJAX',\r\n            '这段代码里的 this 是什么？',\r\n            '闭包/立即执行函数是什么？',\r\n            '什么是 JSONP，什么是 CORS，什么是跨域？',\r\n            'async/await 怎么用，如何捕获异常？',\r\n            '如何实现深拷贝？',\r\n            '如何用正则实现 trim()？',\r\n            '不用 class 如何实现继承？用 class 又如何实现？',\r\n            '如何实现数组去重？',\r\n            '手写一个 Promise'\r\n        ]\r\n    },\r\n    {\r\n        title: 'Vue押题',\r\n        random: 2,\r\n        text: [\r\n            'watch 和 computed 和 methods 区别是什么？',\r\n            'Vue 有哪些生命周期钩子函数？分别有什么用？',\r\n            'Vue 如何实现组件间通信？',\r\n            'Vue 数据响应式怎么做到的？（双向绑定的原理）',\r\n            'Vue.set 是做什么用的？',\r\n            'Vuex 的用法？',\r\n            'VueRouter 的用法？',\r\n            '路由守卫是什么？',\r\n        ]\r\n    },\r\n    {\r\n        title: '开放性问题',\r\n        random: 2,\r\n        text: [\r\n            '说说你对行业、技术发展趋势的看法。',\r\n            '说说你在工作中遇到的最难的问题，以及你是如何解决该问题的。',\r\n            '为什么从上一家公司离职？',\r\n            '你最近是否参加了培训课程。',\r\n            '你还有什么问题要问的吗。'\r\n        ]\r\n    },\r\n]","import testData from './test.js'\r\n\r\nlet unfilteredData = testData     // 未筛选的数据\r\nlet reset = get_el('#resetContent')\r\nlet app = get_el('#app')\r\nlet pdf = get_el('#printPDF')\r\nlet localKey = 'uphgQuestion'     // localStorage 数据存储的名称\r\ninitElement(app, { key: localKey,value: unfilteredData })\r\n// 重置按钮\r\nreset.onclick = function () {\r\n    // 获取随机筛选后的数据\r\n    let QuestionList = addChapter(unfilteredData)\r\n    // 将它添加到 dom 中\r\n    loadTemplate(app, QuestionList)\r\n    // 将它存储到 local 中\r\n    setLocal(localKey, QuestionList)\r\n}\r\n// PDF打印按钮\r\npdf.onclick = function () {\r\n    window.print() \r\n}\r\n\r\n// 随机筛选数据\r\nfunction addChapter(data) {\r\n    let isData = []\r\n    if (type(data) === 'array' || type(data) === 'object') {\r\n        isData = Array.from(data)\r\n    } else {\r\n        console.error('请传入一个「数组」或「伪数组」')\r\n    }\r\n    let title = ''\r\n    // problemList：要展示的问题，getQuestionList：要展示的所有数据\r\n    let [problemList, getQuestionList] = [[], []]\r\n    isData.forEach((item, index) => {\r\n        // 清空之前的内容\r\n        title = item.title\r\n        //随机抽取指定数量的题目\r\n        if (!!item.random) {\r\n            let number = parseInt(item.random)\r\n            problemList = randomArray(item.text, number).result\r\n            getQuestionList[index] = {\r\n                title,\r\n                text: [...problemList]\r\n            }\r\n        } else {\r\n            problemList = item.text\r\n            getQuestionList[index] = {\r\n                title,\r\n                text: [...problemList]\r\n            }\r\n        }\r\n    })\r\n    return getQuestionList // 返回当前随机的后的问题\r\n}\r\n// 第一次加载数据\r\nfunction initElement(element, local = {}){\r\n    let data = {}\r\n    if(asserLocal(local.key)){\r\n        data = getLocal(local.key)\r\n    }else{\r\n        setLocal(local.key, local.value)\r\n        data = local.value\r\n    }\r\n    loadTemplate(element, data)\r\n}\r\n// 在指定元素中加载模板\r\nfunction loadTemplate(element,data){\r\n    let [parent, template, ulContent, title] = ['', '', '', '']\r\n    let list = []\r\n    data.forEach((item) => {\r\n        ulContent = ''\r\n        title = item.title\r\n        list = item.text\r\n        list.forEach(text => {\r\n            ulContent += `<li>${text}</li>`\r\n        })\r\n        // 将抽取后的题目和大标题放入模板中\r\n        template = `<section class=\"part\"><h2>${title}</h2><ol>${ulContent}</ol></section>`\r\n        // 将模板添加到一个div中\r\n        parent += template\r\n    })\r\n    element.innerHTML = parent\r\n    return parent\r\n}\r\n// 获取元素\r\nfunction get_el(element) {\r\n    return document.querySelector(element)\r\n}\r\n\r\n// 随机抽取题目\r\nfunction randomArray(array, number) {\r\n    let isArray = Array.from(array)\r\n    let result = []\r\n    for (let i = 0; i < number; i++) {\r\n        let single = Math.floor(Math.random() * isArray.length)\r\n        result.push(isArray.splice(single, 1)[0])\r\n    }\r\n    return {\r\n        result: result, // 随机抽取后的数组\r\n        after: isArray  // 原数组的拷贝\r\n    }\r\n}\r\n\r\n// 将字符串格式的HTML转换为DOM元素\r\n// function changeLabel(element){\r\n//     let div = document.createElement('div')\r\n//     div.innerHTML = element\r\n//     return div.firstElementChild\r\n// }\r\n\r\n\r\nfunction asserLocal(name){\r\n    return localStorage.hasOwnProperty(name)\r\n}\r\n\r\n// 根据存储名称获取 localStorage 的值\r\nfunction getLocal(name){\r\n    return JSON.parse(localStorage.getItem(name))\r\n}\r\n\r\n// 设置/存储 localStorage 的值\r\nfunction setLocal(name, data){\r\n    localStorage.setItem(name, JSON.stringify(data))\r\n}\r\n\r\n// 判断数据类型\r\nfunction type(o) {\r\n    let s = Object.prototype.toString.call(o);\r\n    return s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\r\n};\r\n"]}